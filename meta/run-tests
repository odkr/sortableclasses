#!/bin/sh
# run-tests - Runs various tests to make sure a package works.
# Copyright 2019 Odin Kroeger
#
# In this order:
#   1. Runs MyPy on every python file of the package.
#   2. Run the package's test suite.
#   3. Checks if the package can be installed and uninstalled.

set -Cefu


# Functions
# =========

# Takes a signal as argument, runs $EX, propagates the signal, and exits.
onexit() {
    __ONEXIT_STATUS=$?
    trap '' 0 "${1:?'onexit: missing SIGNAL.'}" || :
    set +e
    eval "${EX-}"
    EX=''
    kill "-$1" $$ 2>/dev/null
    exit "$__ONEXIT_STATUS"
}

# Registers onexit to catch signals 0, 1, 2, 3, 6, and 15.
# shellcheck disable=2064
register_onexit() {
    for __REGISTER_ONEXIT_SIGNO in 0 1 2 3 6 13 15; do
        trap "onexit $__REGISTER_ONEXIT_SIGNO" $__REGISTER_ONEXIT_SIGNO
    done
}

# Tries to install the package.
test_install() (
    name="${1:?'missing package name.'}"
    python3 -c 'import virtualenv' || return 0
    [ -d env ] || python3 -m virtualenv env
    . env/bin/activate
    register_onexit
    EX="pip3 uninstall --yes \"$name\""
    python3 setup.py install || return
    python3 -m "$name"
)


# Main
# ====

NAME=$(python3 -c 'import sys, setup; print(setup.NAME)')
: "${NAME:?'Could not determine package name.'}"

REPO=$(git worktree list | head -n1 | cut -f1 -d ' ')
: "${REPO:?'Could not determine repository path.'}"

cd -P "$REPO" || exit

mypy 2>/dev/null || ERRLVL=$?
if [ ${ERRLVL-0} -ne 127 ]; then
    find "$NAME" -name '*.py' -print0 | {
        xargs -0 mypy
        python3 setup.py test
        test_install "$NAME"
    }
else
    python3 setup.py test
    test_install "$NAME"
fi
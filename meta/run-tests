#!/bin/sh
# run-tests - Runs various tests to make sure a package works.
# Copyright 2019 Odin Kroeger
#
# In this order:
#   1. Runs MyPy on every python file of the package.
#   2. Run the package's test suite.
#   3. Checks if the package can be installed and uninstalled.

set -Cefu


# Configuration
# =============

# Whether to run mypy. 0 means "don't", every other number means "do". 
RUN_MYPY=1


# Functions
# =========

# Takes a signal as argument, runs $EX, propagates the signal, and exits.
onexit() {
    __ONEXIT_STATUS=$?
    trap '' 0 "${1:?'missing SIGNAL.'}" || :
    set +e
    eval "${EX-}"
    EX=''
    kill "-$1" $$ 2>/dev/null
    exit "$__ONEXIT_STATUS"
}

# Registers onexit to catch signals 0, 1, 2, 3, 6, and 15.
# shellcheck disable=2064
register_onexit() {
    for __REGISTER_ONEXIT_SIGNO in 0 1 2 3 6 13 15; do
        trap "onexit $__REGISTER_ONEXIT_SIGNO" $__REGISTER_ONEXIT_SIGNO
    done
}

# Takes a format and arguments and prints it on STDERR.
warn() (
    format="${1:?'missing FORMAT'}"
    shift
    printf -- "run-tests: $format\\n" "$@" >&2
)

# Tries to install the package.
test_install() (
    name="${1:?'missing PACKAGE.'}"
    python3 -c 'import virtualenv' || return 0
    [ -d env ] || python3 -m virtualenv env
    . env/bin/activate
    register_onexit
    EX="pip3 uninstall --quiet --yes \"$name\""
    python3 setup.py --quiet install || return
    python3 -c "import $name"
)


# Main
# ====

NAME=$(python3 -c 'import sys, setup; print(setup.NAME)')
: "${NAME:?'Could not determine package name.'}"

REPO=$(git worktree list | head -n1 | cut -f1 -d ' ')
: "${REPO:?'Could not determine repository path.'}"

cd -P "$REPO" || exit

[ "${RUN_MYPY-0}" -ne 0 ] && { mypy --help >/dev/null 2>&1 || ERRLVL=$?; }
if [ "${RUN_MYPY-0}" -ne 0 ] && [ ${ERRLVL-0} -ne 127 ]; then
        warn "running mypy."
        mypy "$NAME"
fi

bandit --help >/dev/null 2>&1 || ERRLVL=$?
if [ ${ERRLVL-0} -ne 127 ]; then
    warn "running bandit."
    # bandit is terribly chatty and has poor output controls.    
    bandit -r "$NAME" 2>&1 | 
    sed -n -e '/^[[:space:]]*$/ d' \
           -e '/^\[[a-z0-9_]*\][[:space:]]*INFO/ d;' \
           -e '/^Run started:/ d' \
           -e '/^-\{4,16\}/ q; /^Test results:/ q;'
fi

flake8 --help >/dev/null 2>&1 || ERRLVL=$?
if [ ${ERRLVL-0} -ne 127 ]; then
    warn "running flake8."
    flake8 --ignore=E252,E262 "$NAME"
fi

pylint --help >/dev/null 2>&1 || ERRLVL=$?
if [ ${ERRLVL-0} -ne 127 ]; then
    warn "running pylint."
    pylint -s n "$NAME"
fi

pydocstyle --help >/dev/null 2>&1 || ERRLVL=$?
if [ ${ERRLVL-0} -ne 127 ]; then
    warn "running pydocstyle."
    pydocstyle --add-ignore=D104 "$NAME"
fi

warn "running test suite."
python3 setup.py --quiet test

warn "testing installation."
test_install "$NAME"
